[alias]
    br = branch
    ci = commit
    co = checkout
    cp = cherry-pick
    df = diff
    dfs = diff --staged
    format = clang-format
    fx = commit --amend --no-edit
    last = log -1 HEAD
    replay = "!f() { if [ -z \"${1##*\\.\\.*}\" ]; then for rev in $(git rev-list --topo-order --reverse --no-walk=unsorted \"$@\"); do export GIT_COMMITTER_DATE=\"$(git show -s --format='%ct' $rev)\"; export GIT_COMMITTER_NAME=\"$(git show -s --format='%cn' $rev)\"; export GIT_COMMITTER_EMAIL=\"$(git show -s --format='%ce' $rev)\"; git cherry-pick $rev; done; else echo \"fatal: only '<commit>..<commit>' notation is currently supported\" && return 1; fi  }; f"
    rprune = "!f() { git fetch -p && git branch --list --format \"%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)\" | xargs --no-run-if-empty git branch -d; }; f"
    rt = reset
    rs = restore
    st = status
    sw = switch
    unstage = reset HEAD --
    view = log --pretty=view --graph --date-order
[credential]
    helper = /usr/lib/git-core/git-credential-libsecret
[diff]
    tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
[merge]
    conflictstyle = diff3
    tool = meld
[mergetool]
    prompt = false
[mergetool "meld"]
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE"
[pretty]
    view = format:%>|(30,trunc)%C(auto,yellow)%h %C(auto,reset)%<(52,trunc)%s %C(auto,green)%<(15,trunc)%aN %C(auto,blue)%ai%C(auto,red)%gd%d
[pull]
    ff = only
[push]
    default = simple
[status]
    submodulesummary = 1
